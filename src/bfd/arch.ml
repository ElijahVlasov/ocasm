open Base.Fn
include C.Types.Arch

let to_t_generated = id

module Machine : sig
  type t

  val to_int32 : t -> int32
  val m68000 : t
  val m68008 : t
  val m68010 : t
  val m68020 : t
  val m68030 : t
  val m68040 : t
  val m68060 : t
  val cpu32 : t
  val fido : t
  val mcf_isa_a_nodiv : t
  val mcf_isa_a : t
  val mcf_isa_a_mac : t
  val mcf_isa_a_emac : t
  val mcf_isa_aplus : t
  val mcf_isa_aplus_mac : t
  val mcf_isa_aplus_emac : t
  val mcf_isa_b_nousp : t
  val mcf_isa_b_nousp_mac : t
  val mcf_isa_b_nousp_emac : t
  val mcf_isa_b : t
  val mcf_isa_b_mac : t
  val mcf_isa_b_emac : t
  val mcf_isa_b_float : t
  val mcf_isa_b_float_mac : t
  val mcf_isa_b_float_emac : t
  val mcf_isa_c : t
  val mcf_isa_c_mac : t
  val mcf_isa_c_emac : t
  val mcf_isa_c_nodiv : t
  val mcf_isa_c_nodiv_mac : t
  val mcf_isa_c_nodiv_emac : t
  val or1k : t
  val or1knd : t
  val sparc : t
  val sparc_sparclet : t
  val sparc_sparclite : t
  val sparc_v8plus : t
  val sparc_sparclite_le : t
  val sparc_v9 : t
  val spu : t
  val mips3000 : t
  val mips3900 : t
  val mips4000 : t
  val mips4010 : t
  val mips4100 : t
  val mips4111 : t
  val mips4120 : t
  val mips4300 : t
  val mips4400 : t
  val mips4600 : t
  val mips4650 : t
  val mips5000 : t
  val mips5400 : t
  val mips5500 : t
  val mips5900 : t
  val mips6000 : t
  val mips7000 : t
  val mips8000 : t
  val mips9000 : t
  val mips10000 : t
  val mips12000 : t
  val mips14000 : t
  val mips16000 : t
  val mips16 : t
  val mips5 : t
  val mips_loongson_2e : t
  val mips_loongson_2f : t
  val mips_gs464 : t
  val mips_gs464e : t
  val mips_gs264e : t
  val mips_octeon : t
  val mips_octeonp : t
  val mips_octeon2 : t
  val mips_octeon3 : t
  val mipsisa32 : t
  val mipsisa32r2 : t
  val mipsisa32r3 : t
  val mipsisa32r5 : t
  val mipsisa32r6 : t
  val mipsisa64 : t
  val mipsisa64r2 : t
  val mipsisa64r3 : t
  val mipsisa64r5 : t
  val mipsisa64r6 : t
  val mips_micromips : t
  val h8300 : t
  val h8300h : t
  val h8300s : t
  val h8300hn : t
  val h8300sn : t
  val h8300sx : t
  val h8300sxn : t
  val ppc : t
  val ppc64 : t
  val ppc_403 : t
  val ppc_403gc : t
  val ppc_405 : t
  val ppc_505 : t
  val ppc_601 : t
  val ppc_602 : t
  val ppc_603 : t
  val ppc_ec603e : t
  val ppc_604 : t
  val ppc_620 : t
  val ppc_630 : t
  val ppc_750 : t
  val ppc_860 : t
  val ppc_a35 : t
  val ppc_rs64ii : t
  val ppc_rs64iii : t
  val ppc_7400 : t
  val ppc_e500 : t
  val ppc_e500mc : t
  val ppc_e500mc64 : t
  val ppc_e5500 : t
  val ppc_e6500 : t
  val ppc_titan : t
  val ppc_vle : t
  val rs6k : t
  val rs6k_rs1 : t
  val rs6k_rsc : t
  val rs6k_rs2 : t
  val hppa10 : t
  val hppa11 : t
  val hppa20 : t
  val hppa20w : t
  val d10v : t
  val d10v_ts2 : t
  val d10v_ts3 : t
  val m6812_default : t
  val m6812 : t
  val m6812s : t
  val s12z_default : t
  val z8001 : t
  val z8002 : t
  val sh : t
  val arm_unknown : t
  val arm_2 : t
  val arm_2a : t
  val arm_3 : t
  val arm_3M : t
  val arm_4 : t
  val arm_4T : t
  val arm_5 : t
  val arm_5T : t
  val arm_5TE : t
  val arm_XScale : t
  val arm_ep9312 : t
  val arm_iWMMXt : t
  val arm_iWMMXt2 : t
  val arm_5TEJ : t
  val arm_6 : t
  val arm_6KZ : t
  val arm_6T2 : t
  val arm_6K : t
  val arm_7 : t
  val arm_6M : t
  val arm_6SM : t
  val arm_7EM : t
  val arm_8 : t
  val arm_8R : t
  val arm_8M_BASE : t
  val arm_8M_MAIN : t
  val arm_8_1M_MAIN : t
  val arm_9 : t
  val n1 : t
  val n1h : t
  val n1h_v2 : t
  val n1h_v3 : t
  val n1h_v3m : t
  val tic3x : t
  val tic4x : t
  val v850 : t
  val arc_a4 : t
  val arc_a5 : t
  val arc_arc600 : t
  val arc_arc601 : t
  val arc_arc700 : t
  val arc_arcv2 : t
  val mn10300 : t
  val am33 : t
  val am33_2 : t
  val frv : t
  val frvsimple : t
  val fr300 : t
  val fr400 : t
  val fr450 : t
  val fr500 : t
  val fr550 : t
  val moxie : t
  val ft32 : t
  val ft32b : t
  val mep : t
  val metag : t
  val ia64_elf64 : t
  val ia64_elf32 : t
  val ip2022 : t
  val ip2022ext : t
  val iq2000 : t
  val iq10 : t
  val bpf : t
  val xbpf : t
  val epiphany16 : t
  val epiphany32 : t
  val ms1 : t
  val mrisc2 : t
  val ms2 : t
  val avr1 : t
  val avr2 : t
  val avr25 : t
  val avr3 : t
  val avr31 : t
  val avr35 : t
  val avr4 : t
  val avr5 : t
  val avr51 : t
  val avr6 : t
  val avrtiny : t
  val avrxmega1 : t
  val avrxmega2 : t
  val avrxmega3 : t
  val avrxmega4 : t
  val avrxmega5 : t
  val avrxmega6 : t
  val avrxmega7 : t
  val bfin : t
  val cr16 : t
  val crx : t
  val cris_v0_v10 : t
  val cris_v32 : t
  val cris_v10_v32 : t
  val riscv32 : t
  val riscv64 : t
  val s390_31 : t
  val s390_64 : t
  val score3 : t
  val score7 : t
  val xstormy16 : t
  val msp11 : t
  val msp110 : t
  val msp12 : t
  val msp13 : t
  val msp14 : t
  val msp15 : t
  val msp16 : t
  val msp20 : t
  val msp21 : t
  val msp22 : t
  val msp23 : t
  val msp24 : t
  val msp26 : t
  val msp31 : t
  val msp32 : t
  val msp33 : t
  val msp41 : t
  val msp42 : t
  val msp43 : t
  val msp44 : t
  val msp430x : t
  val msp46 : t
  val msp47 : t
  val msp54 : t
  val xgate : t
  val xtensa : t
  val z80strict : t
  val z180 : t
  val z80 : t
  val ez80_z80 : t
  val ez80_adl : t
  val z80n : t
  val z80full : t
  val gbz80 : t
  val r800 : t
  val lm32 : t
  val kv3_unknown : t
  val kv3_1 : t
  val kv3_1_64 : t
  val kv3_1_usr : t
  val kv3_2 : t
  val kv3_2_64 : t
  val kv3_2_usr : t
  val kv4_1 : t
  val kv4_1_64 : t
  val kv4_1_usr : t
  val tilepro : t
  val tilegx : t
  val tilegx32 : t
  val aarch64 : t
  val aarch64_8R : t
  val aarch64_ilp32 : t
  val aarch64_llp64 : t
  val visium : t
  val wasm32 : t
  val pru : t
  val ck_unknown : t
  val ck510 : t
  val ck610 : t
  val ck801 : t
  val ck802 : t
  val ck803 : t
  val ck807 : t
  val ck810 : t
  val ck860 : t
  val loongarch32 : t
  val loongarch64 : t
end = struct
  type t = int32

  let to_int32 = id
  let m68000 = C.Types.bfd_mach_m68000
  let m68008 = C.Types.bfd_mach_m68008
  let m68010 = C.Types.bfd_mach_m68010
  let m68020 = C.Types.bfd_mach_m68020
  let m68030 = C.Types.bfd_mach_m68030
  let m68040 = C.Types.bfd_mach_m68040
  let m68060 = C.Types.bfd_mach_m68060
  let cpu32 = C.Types.bfd_mach_cpu32
  let fido = C.Types.bfd_mach_fido
  let mcf_isa_a_nodiv = C.Types.bfd_mach_mcf_isa_a_nodiv
  let mcf_isa_a = C.Types.bfd_mach_mcf_isa_a
  let mcf_isa_a_mac = C.Types.bfd_mach_mcf_isa_a_mac
  let mcf_isa_a_emac = C.Types.bfd_mach_mcf_isa_a_emac
  let mcf_isa_aplus = C.Types.bfd_mach_mcf_isa_aplus
  let mcf_isa_aplus_mac = C.Types.bfd_mach_mcf_isa_aplus_mac
  let mcf_isa_aplus_emac = C.Types.bfd_mach_mcf_isa_aplus_emac
  let mcf_isa_b_nousp = C.Types.bfd_mach_mcf_isa_b_nousp
  let mcf_isa_b_nousp_mac = C.Types.bfd_mach_mcf_isa_b_nousp_mac
  let mcf_isa_b_nousp_emac = C.Types.bfd_mach_mcf_isa_b_nousp_emac
  let mcf_isa_b = C.Types.bfd_mach_mcf_isa_b
  let mcf_isa_b_mac = C.Types.bfd_mach_mcf_isa_b_mac
  let mcf_isa_b_emac = C.Types.bfd_mach_mcf_isa_b_emac
  let mcf_isa_b_float = C.Types.bfd_mach_mcf_isa_b_float
  let mcf_isa_b_float_mac = C.Types.bfd_mach_mcf_isa_b_float_mac
  let mcf_isa_b_float_emac = C.Types.bfd_mach_mcf_isa_b_float_emac
  let mcf_isa_c = C.Types.bfd_mach_mcf_isa_c
  let mcf_isa_c_mac = C.Types.bfd_mach_mcf_isa_c_mac
  let mcf_isa_c_emac = C.Types.bfd_mach_mcf_isa_c_emac
  let mcf_isa_c_nodiv = C.Types.bfd_mach_mcf_isa_c_nodiv
  let mcf_isa_c_nodiv_mac = C.Types.bfd_mach_mcf_isa_c_nodiv_mac
  let mcf_isa_c_nodiv_emac = C.Types.bfd_mach_mcf_isa_c_nodiv_emac
  let or1k = C.Types.bfd_mach_or1k
  let or1knd = C.Types.bfd_mach_or1knd
  let sparc = C.Types.bfd_mach_sparc
  let sparc_sparclet = C.Types.bfd_mach_sparc_sparclet
  let sparc_sparclite = C.Types.bfd_mach_sparc_sparclite
  let sparc_v8plus = C.Types.bfd_mach_sparc_v8plus
  let sparc_sparclite_le = C.Types.bfd_mach_sparc_sparclite_le
  let sparc_v9 = C.Types.bfd_mach_sparc_v9
  let spu = C.Types.bfd_mach_spu
  let mips3000 = C.Types.bfd_mach_mips3000
  let mips3900 = C.Types.bfd_mach_mips3900
  let mips4000 = C.Types.bfd_mach_mips4000
  let mips4010 = C.Types.bfd_mach_mips4010
  let mips4100 = C.Types.bfd_mach_mips4100
  let mips4111 = C.Types.bfd_mach_mips4111
  let mips4120 = C.Types.bfd_mach_mips4120
  let mips4300 = C.Types.bfd_mach_mips4300
  let mips4400 = C.Types.bfd_mach_mips4400
  let mips4600 = C.Types.bfd_mach_mips4600
  let mips4650 = C.Types.bfd_mach_mips4650
  let mips5000 = C.Types.bfd_mach_mips5000
  let mips5400 = C.Types.bfd_mach_mips5400
  let mips5500 = C.Types.bfd_mach_mips5500
  let mips5900 = C.Types.bfd_mach_mips5900
  let mips6000 = C.Types.bfd_mach_mips6000
  let mips7000 = C.Types.bfd_mach_mips7000
  let mips8000 = C.Types.bfd_mach_mips8000
  let mips9000 = C.Types.bfd_mach_mips9000
  let mips10000 = C.Types.bfd_mach_mips10000
  let mips12000 = C.Types.bfd_mach_mips12000
  let mips14000 = C.Types.bfd_mach_mips14000
  let mips16000 = C.Types.bfd_mach_mips16000
  let mips16 = C.Types.bfd_mach_mips16
  let mips5 = C.Types.bfd_mach_mips5
  let mips_loongson_2e = C.Types.bfd_mach_mips_loongson_2e
  let mips_loongson_2f = C.Types.bfd_mach_mips_loongson_2f
  let mips_gs464 = C.Types.bfd_mach_mips_gs464
  let mips_gs464e = C.Types.bfd_mach_mips_gs464e
  let mips_gs264e = C.Types.bfd_mach_mips_gs264e
  let mips_octeon = C.Types.bfd_mach_mips_octeon
  let mips_octeonp = C.Types.bfd_mach_mips_octeonp
  let mips_octeon2 = C.Types.bfd_mach_mips_octeon2
  let mips_octeon3 = C.Types.bfd_mach_mips_octeon3
  let mipsisa32 = C.Types.bfd_mach_mipsisa32
  let mipsisa32r2 = C.Types.bfd_mach_mipsisa32r2
  let mipsisa32r3 = C.Types.bfd_mach_mipsisa32r3
  let mipsisa32r5 = C.Types.bfd_mach_mipsisa32r5
  let mipsisa32r6 = C.Types.bfd_mach_mipsisa32r6
  let mipsisa64 = C.Types.bfd_mach_mipsisa64
  let mipsisa64r2 = C.Types.bfd_mach_mipsisa64r2
  let mipsisa64r3 = C.Types.bfd_mach_mipsisa64r3
  let mipsisa64r5 = C.Types.bfd_mach_mipsisa64r5
  let mipsisa64r6 = C.Types.bfd_mach_mipsisa64r6
  let mips_micromips = C.Types.bfd_mach_mips_micromips
  let h8300 = C.Types.bfd_mach_h8300
  let h8300h = C.Types.bfd_mach_h8300h
  let h8300s = C.Types.bfd_mach_h8300s
  let h8300hn = C.Types.bfd_mach_h8300hn
  let h8300sn = C.Types.bfd_mach_h8300sn
  let h8300sx = C.Types.bfd_mach_h8300sx
  let h8300sxn = C.Types.bfd_mach_h8300sxn
  let ppc = C.Types.bfd_mach_ppc
  let ppc64 = C.Types.bfd_mach_ppc64
  let ppc_403 = C.Types.bfd_mach_ppc_403
  let ppc_403gc = C.Types.bfd_mach_ppc_403gc
  let ppc_405 = C.Types.bfd_mach_ppc_405
  let ppc_505 = C.Types.bfd_mach_ppc_505
  let ppc_601 = C.Types.bfd_mach_ppc_601
  let ppc_602 = C.Types.bfd_mach_ppc_602
  let ppc_603 = C.Types.bfd_mach_ppc_603
  let ppc_ec603e = C.Types.bfd_mach_ppc_ec603e
  let ppc_604 = C.Types.bfd_mach_ppc_604
  let ppc_620 = C.Types.bfd_mach_ppc_620
  let ppc_630 = C.Types.bfd_mach_ppc_630
  let ppc_750 = C.Types.bfd_mach_ppc_750
  let ppc_860 = C.Types.bfd_mach_ppc_860
  let ppc_a35 = C.Types.bfd_mach_ppc_a35
  let ppc_rs64ii = C.Types.bfd_mach_ppc_rs64ii
  let ppc_rs64iii = C.Types.bfd_mach_ppc_rs64iii
  let ppc_7400 = C.Types.bfd_mach_ppc_7400
  let ppc_e500 = C.Types.bfd_mach_ppc_e500
  let ppc_e500mc = C.Types.bfd_mach_ppc_e500mc
  let ppc_e500mc64 = C.Types.bfd_mach_ppc_e500mc64
  let ppc_e5500 = C.Types.bfd_mach_ppc_e5500
  let ppc_e6500 = C.Types.bfd_mach_ppc_e6500
  let ppc_titan = C.Types.bfd_mach_ppc_titan
  let ppc_vle = C.Types.bfd_mach_ppc_vle
  let rs6k = C.Types.bfd_mach_rs6k
  let rs6k_rs1 = C.Types.bfd_mach_rs6k_rs1
  let rs6k_rsc = C.Types.bfd_mach_rs6k_rsc
  let rs6k_rs2 = C.Types.bfd_mach_rs6k_rs2
  let hppa10 = C.Types.bfd_mach_hppa10
  let hppa11 = C.Types.bfd_mach_hppa11
  let hppa20 = C.Types.bfd_mach_hppa20
  let hppa20w = C.Types.bfd_mach_hppa20w
  let d10v = C.Types.bfd_mach_d10v
  let d10v_ts2 = C.Types.bfd_mach_d10v_ts2
  let d10v_ts3 = C.Types.bfd_mach_d10v_ts3
  let m6812_default = C.Types.bfd_mach_m6812_default
  let m6812 = C.Types.bfd_mach_m6812
  let m6812s = C.Types.bfd_mach_m6812s
  let s12z_default = C.Types.bfd_mach_s12z_default
  let z8001 = C.Types.bfd_mach_z8001
  let z8002 = C.Types.bfd_mach_z8002
  let sh = C.Types.bfd_mach_sh
  let arm_unknown = C.Types.bfd_mach_arm_unknown
  let arm_2 = C.Types.bfd_mach_arm_2
  let arm_2a = C.Types.bfd_mach_arm_2a
  let arm_3 = C.Types.bfd_mach_arm_3
  let arm_3M = C.Types.bfd_mach_arm_3M
  let arm_4 = C.Types.bfd_mach_arm_4
  let arm_4T = C.Types.bfd_mach_arm_4T
  let arm_5 = C.Types.bfd_mach_arm_5
  let arm_5T = C.Types.bfd_mach_arm_5T
  let arm_5TE = C.Types.bfd_mach_arm_5TE
  let arm_XScale = C.Types.bfd_mach_arm_XScale
  let arm_ep9312 = C.Types.bfd_mach_arm_ep9312
  let arm_iWMMXt = C.Types.bfd_mach_arm_iWMMXt
  let arm_iWMMXt2 = C.Types.bfd_mach_arm_iWMMXt2
  let arm_5TEJ = C.Types.bfd_mach_arm_5TEJ
  let arm_6 = C.Types.bfd_mach_arm_6
  let arm_6KZ = C.Types.bfd_mach_arm_6KZ
  let arm_6T2 = C.Types.bfd_mach_arm_6T2
  let arm_6K = C.Types.bfd_mach_arm_6K
  let arm_7 = C.Types.bfd_mach_arm_7
  let arm_6M = C.Types.bfd_mach_arm_6M
  let arm_6SM = C.Types.bfd_mach_arm_6SM
  let arm_7EM = C.Types.bfd_mach_arm_7EM
  let arm_8 = C.Types.bfd_mach_arm_8
  let arm_8R = C.Types.bfd_mach_arm_8R
  let arm_8M_BASE = C.Types.bfd_mach_arm_8M_BASE
  let arm_8M_MAIN = C.Types.bfd_mach_arm_8M_MAIN
  let arm_8_1M_MAIN = C.Types.bfd_mach_arm_8_1M_MAIN
  let arm_9 = C.Types.bfd_mach_arm_9
  let n1 = C.Types.bfd_mach_n1
  let n1h = C.Types.bfd_mach_n1h
  let n1h_v2 = C.Types.bfd_mach_n1h_v2
  let n1h_v3 = C.Types.bfd_mach_n1h_v3
  let n1h_v3m = C.Types.bfd_mach_n1h_v3m
  let tic3x = C.Types.bfd_mach_tic3x
  let tic4x = C.Types.bfd_mach_tic4x
  let v850 = C.Types.bfd_mach_v850
  let arc_a4 = C.Types.bfd_mach_arc_a4
  let arc_a5 = C.Types.bfd_mach_arc_a5
  let arc_arc600 = C.Types.bfd_mach_arc_arc600
  let arc_arc601 = C.Types.bfd_mach_arc_arc601
  let arc_arc700 = C.Types.bfd_mach_arc_arc700
  let arc_arcv2 = C.Types.bfd_mach_arc_arcv2
  let mn10300 = C.Types.bfd_mach_mn10300
  let am33 = C.Types.bfd_mach_am33
  let am33_2 = C.Types.bfd_mach_am33_2
  let frv = C.Types.bfd_mach_frv
  let frvsimple = C.Types.bfd_mach_frvsimple
  let fr300 = C.Types.bfd_mach_fr300
  let fr400 = C.Types.bfd_mach_fr400
  let fr450 = C.Types.bfd_mach_fr450
  let fr500 = C.Types.bfd_mach_fr500
  let fr550 = C.Types.bfd_mach_fr550
  let moxie = C.Types.bfd_mach_moxie
  let ft32 = C.Types.bfd_mach_ft32
  let ft32b = C.Types.bfd_mach_ft32b
  let mep = C.Types.bfd_mach_mep
  let metag = C.Types.bfd_mach_metag
  let ia64_elf64 = C.Types.bfd_mach_ia64_elf64
  let ia64_elf32 = C.Types.bfd_mach_ia64_elf32
  let ip2022 = C.Types.bfd_mach_ip2022
  let ip2022ext = C.Types.bfd_mach_ip2022ext
  let iq2000 = C.Types.bfd_mach_iq2000
  let iq10 = C.Types.bfd_mach_iq10
  let bpf = C.Types.bfd_mach_bpf
  let xbpf = C.Types.bfd_mach_xbpf
  let epiphany16 = C.Types.bfd_mach_epiphany16
  let epiphany32 = C.Types.bfd_mach_epiphany32
  let ms1 = C.Types.bfd_mach_ms1
  let mrisc2 = C.Types.bfd_mach_mrisc2
  let ms2 = C.Types.bfd_mach_ms2
  let avr1 = C.Types.bfd_mach_avr1
  let avr2 = C.Types.bfd_mach_avr2
  let avr25 = C.Types.bfd_mach_avr25
  let avr3 = C.Types.bfd_mach_avr3
  let avr31 = C.Types.bfd_mach_avr31
  let avr35 = C.Types.bfd_mach_avr35
  let avr4 = C.Types.bfd_mach_avr4
  let avr5 = C.Types.bfd_mach_avr5
  let avr51 = C.Types.bfd_mach_avr51
  let avr6 = C.Types.bfd_mach_avr6
  let avrtiny = C.Types.bfd_mach_avrtiny
  let avrxmega1 = C.Types.bfd_mach_avrxmega1
  let avrxmega2 = C.Types.bfd_mach_avrxmega2
  let avrxmega3 = C.Types.bfd_mach_avrxmega3
  let avrxmega4 = C.Types.bfd_mach_avrxmega4
  let avrxmega5 = C.Types.bfd_mach_avrxmega5
  let avrxmega6 = C.Types.bfd_mach_avrxmega6
  let avrxmega7 = C.Types.bfd_mach_avrxmega7
  let bfin = C.Types.bfd_mach_bfin
  let cr16 = C.Types.bfd_mach_cr16
  let crx = C.Types.bfd_mach_crx
  let cris_v0_v10 = C.Types.bfd_mach_cris_v0_v10
  let cris_v32 = C.Types.bfd_mach_cris_v32
  let cris_v10_v32 = C.Types.bfd_mach_cris_v10_v32
  let riscv32 = C.Types.bfd_mach_riscv32
  let riscv64 = C.Types.bfd_mach_riscv64
  let s390_31 = C.Types.bfd_mach_s390_31
  let s390_64 = C.Types.bfd_mach_s390_64
  let score3 = C.Types.bfd_mach_score3
  let score7 = C.Types.bfd_mach_score7
  let xstormy16 = C.Types.bfd_mach_xstormy16
  let msp11 = C.Types.bfd_mach_msp11
  let msp110 = C.Types.bfd_mach_msp110
  let msp12 = C.Types.bfd_mach_msp12
  let msp13 = C.Types.bfd_mach_msp13
  let msp14 = C.Types.bfd_mach_msp14
  let msp15 = C.Types.bfd_mach_msp15
  let msp16 = C.Types.bfd_mach_msp16
  let msp20 = C.Types.bfd_mach_msp20
  let msp21 = C.Types.bfd_mach_msp21
  let msp22 = C.Types.bfd_mach_msp22
  let msp23 = C.Types.bfd_mach_msp23
  let msp24 = C.Types.bfd_mach_msp24
  let msp26 = C.Types.bfd_mach_msp26
  let msp31 = C.Types.bfd_mach_msp31
  let msp32 = C.Types.bfd_mach_msp32
  let msp33 = C.Types.bfd_mach_msp33
  let msp41 = C.Types.bfd_mach_msp41
  let msp42 = C.Types.bfd_mach_msp42
  let msp43 = C.Types.bfd_mach_msp43
  let msp44 = C.Types.bfd_mach_msp44
  let msp430x = C.Types.bfd_mach_msp430x
  let msp46 = C.Types.bfd_mach_msp46
  let msp47 = C.Types.bfd_mach_msp47
  let msp54 = C.Types.bfd_mach_msp54
  let xgate = C.Types.bfd_mach_xgate
  let xtensa = C.Types.bfd_mach_xtensa
  let z80strict = C.Types.bfd_mach_z80strict
  let z180 = C.Types.bfd_mach_z180
  let z80 = C.Types.bfd_mach_z80
  let ez80_z80 = C.Types.bfd_mach_ez80_z80
  let ez80_adl = C.Types.bfd_mach_ez80_adl
  let z80n = C.Types.bfd_mach_z80n
  let z80full = C.Types.bfd_mach_z80full
  let gbz80 = C.Types.bfd_mach_gbz80
  let r800 = C.Types.bfd_mach_r800
  let lm32 = C.Types.bfd_mach_lm32
  let kv3_unknown = C.Types.bfd_mach_kv3_unknown
  let kv3_1 = C.Types.bfd_mach_kv3_1
  let kv3_1_64 = C.Types.bfd_mach_kv3_1_64
  let kv3_1_usr = C.Types.bfd_mach_kv3_1_usr
  let kv3_2 = C.Types.bfd_mach_kv3_2
  let kv3_2_64 = C.Types.bfd_mach_kv3_2_64
  let kv3_2_usr = C.Types.bfd_mach_kv3_2_usr
  let kv4_1 = C.Types.bfd_mach_kv4_1
  let kv4_1_64 = C.Types.bfd_mach_kv4_1_64
  let kv4_1_usr = C.Types.bfd_mach_kv4_1_usr
  let tilepro = C.Types.bfd_mach_tilepro
  let tilegx = C.Types.bfd_mach_tilegx
  let tilegx32 = C.Types.bfd_mach_tilegx32
  let aarch64 = C.Types.bfd_mach_aarch64
  let aarch64_8R = C.Types.bfd_mach_aarch64_8R
  let aarch64_ilp32 = C.Types.bfd_mach_aarch64_ilp32
  let aarch64_llp64 = C.Types.bfd_mach_aarch64_llp64
  let visium = C.Types.bfd_mach_visium
  let wasm32 = C.Types.bfd_mach_wasm32
  let pru = C.Types.bfd_mach_pru
  let ck_unknown = C.Types.bfd_mach_ck_unknown
  let ck510 = C.Types.bfd_mach_ck510
  let ck610 = C.Types.bfd_mach_ck610
  let ck801 = C.Types.bfd_mach_ck801
  let ck802 = C.Types.bfd_mach_ck802
  let ck803 = C.Types.bfd_mach_ck803
  let ck807 = C.Types.bfd_mach_ck807
  let ck810 = C.Types.bfd_mach_ck810
  let ck860 = C.Types.bfd_mach_ck860
  let loongarch32 = C.Types.bfd_mach_loongarch32
  let loongarch64 = C.Types.bfd_mach_loongarch64
end
